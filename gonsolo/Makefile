# TODO:
# Remove workaround in nouveau_bo.h for bindgen 66
MESON = meson
BUILD_DIR_NAME = build
BUILD_DIR = ../$(BUILD_DIR_NAME)
#VULKANINFO = ~/src/Vulkan-Tools/gonsolo/vulkaninfo/vulkaninfo
VULKANINFO = /usr/bin/vulkaninfo
VULKAN_COMPUTE_DIR = ~/src/VulkanHpp-Compute-Sample/gonsolo
VULKAN_COMPUTE = ~/src/VulkanHpp-Compute-Sample/gonsolo/VulkanCompute
#APPLICATION = $(VULKANINFO)
APPLICATION = $(VULKAN_COMPUTE)
MACHINE = $(shell uname -m)
NVIDIA_COUNT = $(shell lspci|grep -c NVIDIA)
ifeq ($(NVIDIA_COUNT), 0)
	ICD = ~/bin/mesa/share/vulkan/icd.d/borg_icd.$(MACHINE).json
else
	ICD = ~/bin/mesa/share/vulkan/icd.d/nouveau_icd.$(MACHINE).json
endif
DRIVERS = nouveau,borg-experimental
#DRIVERS = borg-experimental
#VERBOSE = --verbose

t: test
test: #install
	cd $(VULKAN_COMPUTE_DIR); VK_ICD_FILENAMES=$(ICD) $(APPLICATION); cd -
gdb: #install
	cd $(VULKAN_COMPUTE_DIR); VK_ICD_FILENAMES=$(ICD) gdb $(APPLICATION); cd -
rust-gdb: #install
	cd $(VULKAN_COMPUTE_DIR); VK_ICD_FILENAMES=$(ICD) rust-gdb $(APPLICATION); cd -
lldb: install
	cd $(VULKAN_COMPUTE_DIR); VK_ICD_FILENAMES=$(ICD) lldb -o run $(APPLICATION); cd -
install: #compile_and_tidy
	cd $(BUILD_DIR); $(MESON) install; cd -
ct: compile_and_tidy
compile_and_tidy: compile tidy_compile_commands
compile:
	cd $(BUILD_DIR); mold -run $(MESON) compile $(VERBOSE); cd -
link_compile_commands:
	cd ..; ln -s $(BUILD_DIR_NAME)/compile_commands.json .; cd -
setup:
	cd ..; $(MESON) setup $(BUILD_DIR_NAME) -Dbackend=ninja -Dgallium-drivers= -Dvulkan-drivers=$(DRIVERS) -Dprefix=~/bin/mesa; cd -
c: clean
clean:
	cd ..; rm -rf $(BUILD_DIR_NAME); cd -

tidy_compile_commands:
	cd $(BUILD_DIR); sed -i 's/-mtls-dialect=gnu2 //g' compile_commands.json; cd -
	cd $(BUILD_DIR); sed -i 's/-flifetime-dse=1 //g' compile_commands.json; cd -

.PHONY: c clean compile compile_and_tidy ct install link_compile_commands \
	setup t test
